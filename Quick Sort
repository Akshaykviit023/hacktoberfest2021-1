#include<iostream>
using namespace std; 

int partition (int arr[], int ind, int lastElement) 
{ 
    int pivot = arr[lastElement]; 
    int i = (ind - 1);
  
    for (int j = ind; j <= lastElement - 1; j++) 
    { 
        if (arr[j] < pivot) 
        { 
            i++;
            int temp = arr[i]; 
            arr[i] = arr[j]; 
            arr[j]= temp; 
        } 
    }
    int temp = arr[i+1]; 
    arr[i+1] = arr[lastElement]; 
    arr[lastElement]= temp;  
    return (i + 1); 
} 

void quickSort(int arr[], int ind, int lastElement) 
{ 
    if (ind < lastElement) 
    { 
        int pi = partition(arr, ind, lastElement); 
 
        quickSort(arr, ind, pi - 1); 
        quickSort(arr, pi + 1,lastElement); 
    } 
}
int main() 
{ 
    int n;
    cout<<"Enter Size: ";
    cin>>n;
    int arr[n]; 
    cout<<"Enter Array: "<<endl;
    for(int i=0;i<n;i++)
    cin>>arr[i];
    
    quickSort(arr, 0, n - 1); 
    cout << "Sorted array: \n"; 
    for (int i = 0; i < n; i++) 
    cout << arr[i] << " "; 
    return 0; 
} 
